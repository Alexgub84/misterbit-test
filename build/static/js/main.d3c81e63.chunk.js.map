{"version":3,"sources":["assets/images/homepage/menu-items sync /^/.//.*$","assets/images/homepage/menu-items/menu-item1.jpg","assets/images/homepage/menu-items/menu-item2.jpg","assets/images/homepage/menu-items/menu-item3.jpg","assets/images/patterns/pattern-divide.svg","cmps/ItemPreview.jsx","cmps/ItemsList.jsx","services/itemsService.js","cmps/Highlights.jsx","pages/Home.jsx","cmps/Footer.jsx","App.jsx","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ItemPreview","item","className","src","require","imgUrl","alt","title","desc","ItemsList","items","React","Children","toArray","gItems","itemsService","query","a","async","Highlights","state","this","setState","length","Component","Home","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qJAAA,IAAIA,EAAM,CACT,mBAAoB,GACpB,mBAAoB,GACpB,mBAAoB,IAIrB,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,I,mBCxBpBU,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,4C,uICEpC,SAASC,EAAT,GAAgC,IAATC,EAAQ,EAARA,KAC5B,OACE,wBAAIC,UAAU,QACZ,yBAAKA,UAAU,SACb,yBACEC,IAAKC,MAAQ,YAAwCH,EAAKI,SAC1DC,IAAKL,EAAKM,QAEZ,yBAAKL,UAAU,UAEjB,6BACE,4BAAKD,EAAKM,OACV,2BAAIN,EAAKO,QCVV,SAASC,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC1B,OACE,wBAAIR,UAAU,cACXS,IAAMC,SAASC,QACdH,EAAMzB,KAAI,SAACgB,GACT,OAAO,kBAACD,EAAD,CAAaC,KAAMA,SCTpC,IAAMa,EAAS,CACb,CACEP,MAAO,uBACPC,KACE,8EACFH,OAAQ,kBAEV,CACEE,MAAO,wBACPC,KACE,iFACFH,OAAQ,kBAEV,CACEE,MAAO,gCACPC,KACE,yEACFH,OAAQ,mBAGCU,EAAe,CAC1BC,MAEF,0BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACsBH,GADtB,cACQJ,EADR,yBAESA,GAFT,uCClBO,IAAMS,EAAb,2MACEC,MAAQ,CACNV,MAAO,IAFX,qLAKwBK,EAAaC,SALrC,OAKUN,EALV,OAMIW,KAAKC,SAAS,CAAEZ,UANpB,gFAQY,IACAA,EAAUW,KAAKD,MAAfV,MAER,OAAqB,IAAjBA,EAAMa,OAAqB,2CAE7B,6BAASrB,UAAU,cACjB,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,aACb,yBACEC,IAAKC,EAAQ,IACbE,IAAI,YAEN,8DACA,2KAKF,kBAACG,EAAD,CAAWC,MAAOA,UA1B5B,GAAgCc,aCFnBC,EAAb,iLAEI,OACE,yBAAKvB,UAAU,QACb,6BAASA,UAAU,QAAnB,QACA,6BAASA,UAAU,UACjB,6DACA,yBAAKI,IAAI,MAEX,kBAAC,EAAD,MACA,6BAASJ,UAAU,UAAnB,oBACA,6BAASA,UAAU,QAAnB,sCAXR,GAA0BsB,aCDbE,EAAb,iLAEI,OAAO,yBAAKxB,UAAU,UAAf,YAFX,GAA4BsB,aCKfG,EAAb,iLAEI,OACE,6BACE,iCACA,8BACE,kBAAC,EAAD,OAEF,gCACE,kBAAC,EAAD,YATV,GAAyBH,aCKLI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,YCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KAEI,kBAAC,IAAD,KACE,kBAAC,EAAD,QAINC,SAASC,eAAe,SDiHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.d3c81e63.chunk.js","sourcesContent":["var map = {\n\t\"./menu-item1.jpg\": 25,\n\t\"./menu-item2.jpg\": 26,\n\t\"./menu-item3.jpg\": 27\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/menu-item1.c271854d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menu-item2.a1a68d47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/menu-item3.9c7e1cb0.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pattern-divide.c2c518b3.svg\";","import React from \"react\";\n\nexport function ItemPreview({ item }) {\n  return (\n    <li className=\"flex\">\n      <div className=\"image\">\n        <img\n          src={require(`../assets/images/homepage/menu-items/${item.imgUrl}`)}\n          alt={item.title}\n        />\n        <div className=\"line\" />\n      </div>\n      <div>\n        <h3>{item.title}</h3>\n        <p>{item.desc}</p>\n      </div>\n    </li>\n  );\n}\n","import React from \"react\";\n\nimport { ItemPreview } from \"./ItemPreview\";\n\nexport function ItemsList({ items }) {\n  return (\n    <ul className=\"items-list\">\n      {React.Children.toArray(\n        items.map((item) => {\n          return <ItemPreview item={item} />;\n        })\n      )}\n    </ul>\n  );\n}\n","const gItems = [\n  {\n    title: \"Seared Salmon Fillet\",\n    desc:\n      \"Our locally sourced salmon served with a refreshing buckwheat summer salad.\",\n    imgUrl: \"menu-item1.jpg\",\n  },\n  {\n    title: \"Rosemary Filet Mignon\",\n    desc:\n      \"Our prime beef served to your taste with a delicious choice of seasonal sides.\",\n    imgUrl: \"menu-item2.jpg\",\n  },\n  {\n    title: \"Summer Fruit Chocolate Mousse\",\n    desc:\n      \"Creamy mousse combined with summer fruits and dark chocolate shavings.\",\n    imgUrl: \"menu-item3.jpg\",\n  },\n];\nexport const itemsService = {\n  query,\n};\nasync function query() {\n  const items = await gItems;\n  return items;\n}\n","import React, { Component } from \"react\";\n\nimport { ItemsList } from \"./ItemsList\";\n\nimport { itemsService } from \"../services/itemsService\";\nexport class Highlights extends Component {\n  state = {\n    items: [],\n  };\n  async componentDidMount() {\n    const items = await itemsService.query();\n    this.setState({ items });\n  }\n  render() {\n    const { items } = this.state;\n\n    if (items.length === 0) return <div>Loading...</div>;\n    return (\n      <section className=\"highlights\">\n        <div className=\"content flex\">\n          <div className=\"left-side\">\n            <img\n              src={require(\"../assets/images/patterns/pattern-divide.svg\")}\n              alt=\"pattern\"\n            />\n            <h2>A few highlights from our menu</h2>\n            <p>\n              We cater for all dietary requirements, but here’s a glimpse at\n              some of our diner’s favourites. Our menu is revamped every season.\n            </p>\n          </div>\n          <ItemsList items={items} />\n        </div>\n      </section>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Highlights } from \"../cmps/Highlights\";\n\nexport class Home extends Component {\n  render() {\n    return (\n      <div className=\"home\">\n        <section className=\"hero\">Hero</section>\n        <section className=\"middle\">\n          <h2>The most locally sourced food</h2>\n          <img alt=\"\" />\n        </section>\n        <Highlights />\n        <section className=\"bottom\">Family Gathering</section>\n        <section className=\"last\"> Ready to make a reservation?</section>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nexport class Footer extends Component {\n  render() {\n    return <div className=\"footer\">dine</div>;\n  }\n}\n","import React, { Component } from \"react\";\n\nimport \"./assets/styles/global.scss\";\nimport { Home } from \"./pages/Home\";\n\nimport { Footer } from \"./cmps/Footer\";\n\nexport class App extends Component {\n  render() {\n    return (\n      <div>\n        <header></header>\n        <main>\n          <Home />\n        </main>\n        <footer>\n          <Footer />\n        </footer>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/styles/global.scss'\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { Provider } from 'react-redux'\n// import { store } from './store/store'\nimport { HashRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    {/* <Provider store={store}> */}\n      <Router>\n        <App />\n      </Router>\n    {/* </Provider> */}\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}